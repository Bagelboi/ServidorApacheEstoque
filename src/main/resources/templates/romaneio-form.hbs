<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <title>Formulário Romaneio</title>
    <style>
        label { display:block; margin-top:8px; }
        table { border-collapse: collapse; width: 100%; margin-top: 10px; }
        th, td { border: 1px solid #ccc; padding: 6px; }
        .btn { padding: 6px 10px; margin: 4px; }
    </style>
</head>
<body>
<h1>{{buttonText}}</h1>

<form id="romForm" method="post" action="{{action}}">
    <label>Nº Romaneio
        <input name="numeroRomaneio" type="number" value="{{romaneio.numeroRomaneio}}">
    </label>

    <label>Data emissão
        <input name="dataEmissao" type="date" value="{{romaneio.dataEmissao}}">
    </label>

    <label>Destinatário (nome)
        <input name="destinatarioNome" type="text" value="{{romaneio.destinatarioNome}}">
    </label>

    <label>Destinatário (documento)
        <input name="destinatarioDocumento" type="text" value="{{romaneio.destinatarioDocumento}}">
    </label>

    <label>Contato
        <input name="contato" type="text" value="{{romaneio.contato}}">
    </label>

    <label>Coleta
        <input name="coleta" type="text" value="{{romaneio.coleta}}">
    </label>

    <label>Vendedor
        <input name="vendedor" type="text" value="{{romaneio.vendedor}}">
    </label>

    <label>OC
        <input name="oc" type="text" value="{{romaneio.oc}}">
    </label>

    <label>Nota Fiscal
        <input name="notaFiscal" type="number" value="{{romaneio.notaFiscal}}">
    </label>

    <label>Condição de pagamento
        <input name="condPagamento" type="text" value="{{romaneio.condPagamento}}">
    </label>

    <label>Desconto valor total
        <input name="descontoValorTotal" type="number" step="0.01" value="{{romaneio.descontoValorTotal}}">
    </label>

    <label>Observações
        <textarea name="observacoes">{{romaneio.observacoes}}</textarea>
    </label>

    <h3>Produtos</h3>

    <table id="produtosTable">
        <thead>
        <tr>
            <th>SKU</th>
            <th>Quantidade</th>
            <th>Valor unidade</th>
            <th>Remover</th>
        </tr>
        </thead>
        <tbody>
        {{#each romaneio.produtos}}
            <tr data-sku="{{sku}}">
                <td>{{sku}}</td>
                <td><input type="number" value="{{quantidade}}" min="1"></td>
                <td><input type="number" step="0.01" value="{{valor_unidade}}"></td>
                <td><button type="button" onclick="removeRow(this)">Remover</button></td>
            </tr>
        {{/each}}
        </tbody>
    </table>

    <p>
        <input id="newSku" placeholder="SKU (ex: FU123)" type="text">
        <input id="newQuant" placeholder="Quantidade" type="number" value="1" min="1">
        <input id="newValor" placeholder="Valor unit." type="number" step="0.01" value="0.00">
        <button id="addProduto" type="button" class="btn">Adicionar produto</button>
    </p>

    <!-- Hidden input to submit JSON of produtos -->
    <input type="hidden" name="produtosJson" id="produtosJson">

    <p>
        <button type="submit" class="btn">{{buttonText}}</button>
        <a class="btn" href="/rom">Cancelar</a>
    </p>
</form>

<script>
    function removeRow(btn) {
      btn.closest('tr').remove();
    }

    document.getElementById('addProduto').addEventListener('click', function() {
      var sku = document.getElementById('newSku').value.trim();
      if (!sku) { alert('Informe um SKU.'); return; }
      var quant = parseInt(document.getElementById('newQuant').value, 10) || 0;
      var valor = parseFloat(document.getElementById('newValor').value) || 0.0;

      // Optionally warn if SKU format is unusual
      if (!/^(FU|CR)/.test(sku)) {
        if (!confirm('SKU não parece ser FU/CR. Deseja adicionar mesmo assim?')) return;
      }

      addProdutoRow(sku, quant, valor);
    });

    function addProdutoRow(sku, quant, valor) {
      var tbody = document.querySelector('#produtosTable tbody');

      // Remove existing row with same SKU
      var existing = tbody.querySelector(`tr[data-sku="${sku}"]`);
      if (existing) existing.remove();

      var tr = document.createElement('tr');
      tr.setAttribute('data-sku', sku);
      tr.innerHTML = `
        <td>${sku}</td>
        <td><input type="number" value="${quant}" min="1"></td>
        <td><input type="number" step="0.01" value="${valor}"></td>
        <td><button type="button" onclick="removeRow(this)">Remover</button></td>
      `;
      tbody.appendChild(tr);

      document.getElementById('newSku').value = '';
      document.getElementById('newQuant').value = '1';
      document.getElementById('newValor').value = '0.00';
    }

    // Serialize table to JSON before submitting form
    document.getElementById('romForm').addEventListener('submit', function(e) {
      var produtos = [];
      document.querySelectorAll('#produtosTable tbody tr').forEach(tr => {
        var sku = tr.getAttribute('data-sku');
        var inputs = tr.querySelectorAll('input[type="number"]');
        var quant = parseInt(inputs[0].value, 10) || 0;
        var valor = parseFloat(inputs[1].value) || 0.0;
        produtos.push({ sku, quantidade: quant, valor_unidade: valor });
      });
      document.getElementById('produtosJson').value = JSON.stringify(produtos);
    });
</script>
</body>
</html>
